// Code generated by command: go run asm.go -out checksum_amd64.s -stubs checksum_amd64.go. DO NOT EDIT.

// func checksum(data []byte) uint16
// Requires: AVX, AVX2, SSE2
TEXT Â·checksum(SB), $0-26
	MOVQ   data_base+0(FP), AX
	MOVQ   data_len+8(FP), CX
	TESTQ  CX, CX
	JZ     done
	XORQ   DX, DX
	XORQ   BX, BX
	VXORPS Y0, Y0, Y0
	VXORPS Y1, Y1, Y1

loop:
	CMPQ    BX, CX
	JAE     remainder
	VMOVDQU Y1, (AX)(BX*1)
	VPADDW  Y0, Y0, Y1
	ADDQ    $0x00000020, BX
	JMP     loop

remainder:
	MOVQ SI, CX
	SUBQ SI, BX

remainder_loop:
	TESTQ SI, SI
	JZ    done
	MOVB  DI, (AX)(BX*1)
	ADDQ  DI, DX
	INCQ  BX
	DECQ  SI
	JMP   remainder_loop

done:
	VEXTRACTI128 $0x01, Y0, X1
	VPADDW       Y0, Y0, Y1
	VEXTRACTI128 $0x00, Y0, X1
	VPADDW       Y0, Y0, Y1
	VMOVDQU      X2, X0
	MOVD         DI, X2
	ADDQ         DX, DI
	PSRLDQ       $0x08, X2
	MOVD         X2, DI
	ADDQ         DX, DI
	MOVL         R8, DX
	SHRL         $0x10, R8
	ADDL         DX, R8
	MOVL         R9, R8
	SHRL         $0x10, R9
	ADDL         DX, R9
	ANDQ         $0x0000ffff, DX
	MOVW         DX, ret+24(FP)
	RET
	XORW AX, AX
	MOVW $0x0000, AX
	MOVW AX, ret+24(FP)
	RET
